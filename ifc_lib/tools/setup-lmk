#!/usr/bin/env python

import os
import time
import argparse

import bind_ifc_1412

from ifc_lib import lmk04616
from fpga_lib.devices import LMK04616


def parse_args():
    parser = argparse.ArgumentParser(description = 'Read/write raw registers')
    parser.add_argument(
        '-a', dest = 'addr', default = 0,
        help = 'Set physical address of card.  If not specified then card 0')
    return parser.parse_args()


def setup_sys_lmk(lmk_reg, select):
    raw_lmk = lmk04616.RawLMK(lmk_reg, select)
    lmk = lmk04616.setup_sys_lmk(raw_lmk)
    # Give the system time to lock
    time.sleep(0.01)
    return lmk


def report_status(top, lmk):
    print('SYS LMK Locked' if lmk.PLL2_LCK_DET else 'Unlocked')



def main():
    args = parse_args()
    top, sg = bind_ifc_1412.open(args.addr)

    if sg:
        # Before messing with the LMK ensure that CK and SG are in reset and the
        # controller isn't actually running
        sg.CONFIG._write_fields_rw(
            CK_RESET_N = 0, SG_RESET_N = 0,
            ENABLE_CONTROL = 0, ENABLE_REFRESH = 0, ENABLE_AXI = 0)

#     lmk = setup_sys_lmk(top.LMK04616, args.select)

    # At the moment only sys is suppported
    lmk = setup_sys_lmk(top.LMK04616, 'sys')

    # Wait for lock before enabling ethernet and reporting status
    time.sleep(0.1)
    report_status(top, lmk)


main()
