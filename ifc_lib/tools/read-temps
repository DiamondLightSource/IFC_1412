#!/usr/bin/env python

import signal
import numpy
import time
import argparse

import registers

def parse_args():
    parser = argparse.ArgumentParser(description = 'Read/write raw registers')
    parser.add_argument(
        '-a', dest = 'addr', default = 0,
        help = 'Set physical address of card.  If not specified then card 0')
    parser.add_argument(
        '-t', dest = 'timestamp', default = False, action = 'store_true',
        help = 'Add timestamp to temperature readings')
    return parser.parse_args()


args = parse_args()

_, sg = registers.open(args.addr)

assert sg.CONFIG.ENABLE_CONTROL, 'Controller must be enabled first!'


ctrl_c_seen = False
def handler(sig, frame):
    global ctrl_c_seen
    ctrl_c_seen = True
signal.signal(signal.SIGINT, handler)


def read_temps(delay):
    while not ctrl_c_seen:
        temps = sg.TEMPS._get_fields()
        raw = numpy.array([temps.CH0, temps.CH1, temps.CH2, temps.CH3])
        line = ' '.join(map(str, 2 * raw - 40))
        if args.timestamp:
            line = '{:f} {:s}'.format(time.time(), line)
        print(line)
        time.sleep(delay)

read_temps(0.01)
