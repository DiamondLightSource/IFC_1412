#!/usr/bin/env python

import sys
import argparse
import time
import itertools

import registers
from ifc_lib.gddr6_lib.delays import \
    read_idelay, read_odelay, read_obitslip, read_ibitslip

parser = argparse.ArgumentParser()
parser.add_argument('-t', '--timestamp', action = 'store_true')
parser.add_argument('-i', '--idelays', action = 'store_true')
parser.add_argument('-o', '--odelays', action = 'store_true')
parser.add_argument('-b', '--brief', action = 'store_true')
parser.add_argument('interval', nargs = '?', type = float)
args = parser.parse_args()


_, sg = registers.open()


def print_iodelays(read):
    for n in range(0, 64, 16):
        print('%2d' % n, end = ': ')
        for i in range(16):
            print(' %3d' % read(sg, n + i), end = '')
        print()


def pretty_print_delays():
    print('DQ RX IDELAY')
    print_iodelays(read_idelay)
    print('DQ TX ODELAY')
    print_iodelays(read_odelay)
    print('DBI IDELAY/ODELAY')
    print('    ', end = '')
    for i in range(8):
        print(' %3d' % read_idelay(sg, 64 + i), end = '')
    for i in range(8):
        print(' %3d' % read_odelay(sg, 64 + i), end = '')
    print()
    print('EDC IDELAY')
    print('    ', end = '')
    for i in range(8):
        print(' %3d' % read_idelay(sg, 72 + i), end = '')
    print()
    print('OBITSLIP')
    print(' 0:  ', end = '')
    for n in range(32):
        print('', read_obitslip(sg, n), end = '')
    print()
    print('32:  ', end = '')
    for n in range(32, 64):
        print('', read_obitslip(sg, n), end = '')
    print()
    print('64:  ', end = '')
    for n in range(64, 72):
        print('', read_obitslip(sg, n), end = '')
    print()
    print('IBITSLIP')
    print(' 0:  ', end = '')
    for n in range(32):
        print('', read_ibitslip(sg, n), end = '')
    print()
    print('32:  ', end = '')
    for n in range(32, 64):
        print('', read_ibitslip(sg, n), end = '')
    print()
    print('64:  ', end = '')
    for n in range(64, 80):
        print('', read_ibitslip(sg, n), end = '')
    print()


def get_idelays():
    return [read_idelay(sg, n) for n in range(80)]

def get_odelays():
    return [read_odelay(sg, n) for n in range(72)]

def get_ibitslips():
    return [read_ibitslip(sg, n) for n in range(80)]

def get_obitslips():
    return [read_obitslip(sg, n) for n in range(72)]

def print_array(delays):
    print(' '.join(map(str, delays)))

def log_delays(args):
    while True:
        if args.timestamp:
            print(time.time(), end = ' ')
        delays = get_idelays() + get_odelays()
        print_array(delays)
#         print(' '.join(map(str, delays)))
        time.sleep(args.interval)

def brief_print_delays():
    padding = 8 * [0]
    print_array(get_idelays())
    print_array(get_odelays() + padding)
    print_array(get_ibitslips())
    print_array(get_obitslips() + padding)


if args.interval:
    log_delays(args)
elif args.brief:
    brief_print_delays()
else:
    pretty_print_delays()
