#!/usr/bin/env python

import numpy

from registers import sg


def read_riu(nibble, reg):
    riu = sg.RIU
    address = (nibble << 6) | (reg & 0x3F)

    riu._write_fields_wo(ADDRESS = address, WRITE = 0, VTC = 1)
    result = riu._get_fields()
    assert not result.TIMEOUT
    return result.DATA

def write_riu(nibble, reg, value):
    riu = sg.RIU
    address = (nibble << 6) | (reg & 0x3F)
    riu._write_fields_wo(DATA = value, ADDRESS = address, WRITE = 1, VTC = 1)
    result = riu._get_fields()
    assert not result.TIMEOUT

def read_riu_nibble(nibble, regs = range(64)):
    result = numpy.empty(len(regs), dtype = numpy.uint16)
    for i, reg in enumerate(regs):
        result[i] = read_riu(nibble, reg)
    return result

def print_riu_array(values):
    N = 16
    for n, value in enumerate(values):
        end = '\n' if (n % N) == n - 1 else ' '
        print('%04X' % value, end = end)

for n in range(4):
    print(n)
    print_riu_array(read_riu_nibble(n))

tx_delay_regs = list(range(0x0a, 0x12))
rx_delay_regs = list(range(0x12, 0x19))

print(read_riu_nibble(0, tx_delay_regs + rx_delay_regs))

for nibble in range(8):
    for reg in tx_delay_regs + rx_delay_regs:
        write_riu(nibble, reg, 0)
