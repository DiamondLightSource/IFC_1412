#!/usr/bin/env python

import os
import argparse

import flash_lib


def parse_args():
    parser = argparse.ArgumentParser(description = 'Write to flash memory')
    flash_lib.add_common_args(parser)
    parser.add_argument('input', help = 'File to write to flash')
    return parser.parse_args()


def wait_while_busy(e):
    # Wait for programming to complete
    while True:
        status = e.RDSR1()
        if not status & 1:
            break
    # Report any detected error condition
    if status & 0x60:
        e.WRDI()
        flash_lib.fail('Erase or write error: %02X' % status)


def erase_sector(e, address):
    e.WREN()
    e.SE(address)
    wait_while_busy(e)


def program_sector(e, address, block):
    for base in range(0, len(block), flash_lib.PAGE_SIZE):
        e.WREN()
        e.PP(address + base, block[base : base + flash_lib.PAGE_SIZE])
        wait_while_busy(e)


def write_flash(e, input, progress):
    address = 0
    while True:
        block = input.read(flash_lib.SECTOR_SIZE)
        if not block:
            break
        progress.report(address)
        erase_sector(e, address)
        program_sector(e, address, block)
        address += flash_lib.SECTOR_SIZE


def main():
    args = parse_args()
    e = flash_lib.open_with_args(args)

    progress = flash_lib.Progress(os.path.getsize(args.input))
    with open(args.input, 'rb') as input:
        write_flash(e, input, progress)
    progress.done()


main()
