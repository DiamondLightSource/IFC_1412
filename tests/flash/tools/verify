#!/usr/bin/env python

import sys
import argparse
import numpy

import flash_lib


def parse_args():
    parser = argparse.ArgumentParser(description = 'Verify written image')
    flash_lib.add_common_args(parser)
    parser.add_argument( 'input', help = 'File to verify')
    return parser.parse_args()


# Returns offset of first difference between a and b
def find_offset(a, b):
    a = numpy.frombuffer(a, dtype = numpy.uint8)
    b = numpy.frombuffer(b, dtype = numpy.uint8)
    return (a == b).argmin()


def verify_image(e, input):
    block_size = 512
    address = 0
    while True:
        from_file = input.read(block_size)
        if not from_file:
            break
        from_flash = e.FAST_READ(address, len(from_file))
        if from_flash != from_file:
            offset = find_offset(from_flash, from_file)
            print('Comparison failed at offset 0x%07X: %02X != %02X' %
                (address + offset, from_flash[offset], from_file[offset]),
                file = sys.stderr)
            sys.exit(1)

        address += len(from_file)


def main():
    args = parse_args()
    e = flash_lib.open_with_args(args)

    with open(args.input, 'rb') as input:
        verify_image(e, input)

main()
