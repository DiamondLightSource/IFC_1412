## Register definitions for GDDR6

!GDDR6
    !!CONTROL
        # Static configuration settings for SG memory
        CONFIG          RW
            # CK region reset, held in reset by default
            .CK_RESET_N
            # Resets for the two DRAM devices, held in reset by default
            .SG_RESET_N     2
            # Must be held low during reset, high after reset completed
            .EDC_T
            # Enable bit inversion on CA output
            .ENABLE_CABI
            # Enable bit inversion on DQ input and output
            .ENABLE_DBI
            # Hold high to hold RX FIFO in reset
            .RESET_FIFO     2
            # Set this to hand control over the memory interface to the memory
            # controller.
            .ENABLE_CONTROL

            # Set to enable capture of DBI to EDC_OUT
            .CAPTURE_DBI
            # Configures delay on data out to CRC, must be setup correctly
            # during training
            .EDC_DELAY      5

            # Special fudge for prototype board, must be removed.  Used to work
            # around sticky CA6 bit.
            .FUDGE_STICKY_CA6

            # Hack to disable VTC
            .DISABLE_VTC

        STATUS          R
            # Set if CK clock is locked, otherwise all access to GDDR6 registers
            # will be effectively ignored
            .CK_OK
            # Set if CK not OK event seen since last read
            .CK_OK_EVENT
            # Set if a CK unlock event has been seen since last read
            .CK_UNLOCK_EVENT
            # Set if PHY read FIFO is properly synchronised
            .FIFO_OK        2
            # Set if FIFO not OK event seen since last read
            .FIFO_OK_EVENT  2

    # Delay control.  Writing updates selected delay control, reading
    # returns current delay for selected output
    DELAY           RW
        # The address map is as follows:
        #   0aaaaaa    Control DQ bit selected by aaaaaaa
        #   1000aaa    Control DBI bit selected by aaa
        #   1001aaa    Control EDC bit selected by aaa (input only)
        #   111xxxx    (unassigned)
        .ADDRESS        7
        # Target selection:
        #   00         Control or read IDELAY
        #   01         Control or read ODELAY
        #   10         (unassigned)
        #   11         Control or read output BITSLIP
        .TARGET         2

        # For bitslip this selects the bitslip delay to be written, for
        # other delays this defines the number of delay steps in the
        # selected direction.
        .DELAY          9
        # Selects direction of IDELAY/ODELAY count, is ignored for bitslip
        .UP_DOWN_N
        # If this is not set only .ADDRESS is used to read back without writing
        .ENABLE_WRITE

    # The EXCHANGE registers are used to exchange up to 64 ticks of data with
    # the SG GDDR6 memory.  Buffers containing CA commands and DQ data to write
    # are first loaded by writing to the DQ and CA registers: up to 16 writes to
    # DQ are needed to load a full line, and CA must be written after loading
    # any DQ data.  An exchange is then triggered by writing to
    # COMMAND.EXCHANGE: all the data is sent and any data returned is captured
    # at the same time ready for subsequent readout.
    #   The last CA command in the exchange remains written to the CA bus on
    # completion of any exchange.
    !!EXCHANGE
        # Write individual bits to trigger the corresponding action
        COMMAND     WP
            # This must be written to reset the exchange write counter before
            # loading any new data into the exchange buffers.
            .START_WRITE
            # This should be written after an exchange to reset the readout
            # counter and before performing any reads.  This command and
            # .EXCHANGE can safely be written together.
            .START_READ
            # Write this to advance the readout counter to the next row of
            # captured output.
            .STEP_READ
            # After loading the CA and DQ exchange buffers write to this to
            # perform a complete exchange transaction.
            .EXCHANGE

        # Writing to this register configures the CA bus output and advances the
        # write counter.  This register must be writte *after* any required DQ
        # data has been written.
        CA          W
            # Rising edge bits of CA command
            .RISING     10
            # Falling edge bits of CA command
            .FALLING    10
            # Special overrides for CA3, normally set to 0
            .CA3        4
            # Command enable, sampled on rising edge of command
            .CKE_N
            # DQ tristate control
            .OUTPUT_ENABLE

        # Write to the register up to 16 times to fill the DQ output buffer from
        # low order bits to high order bits.  Further writes will overwrite
        # previous values.  Write to CA to advance to the next output line.
        #    Read from this register up to 16 times to read the DQ input buffer
        # after completing an exchange.  Advance to the next row by writing to
        # COMMAND.STEP_READ.
        DQ          RW
        # Read from this register 2 times to read the EDC input for the current
        # input line.
        EDC_IN      R
        # Read from this register 2 times to read the EDC output for the current
        # input line.
        EDC_OUT     R
